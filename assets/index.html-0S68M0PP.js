import{_ as i,c as e,f as a,o as t}from"./app-D22ydJtp.js";const n={};function l(d,s){return t(),e("div",null,s[0]||(s[0]=[a(`<p>由于课程需要，需要在 Linux 环境下开发 QT 程序，因此开一篇文章来记录QT的知识点。</p><h1 id="ubuntu-16-04-qt安装" tabindex="-1"><a class="header-anchor" href="#ubuntu-16-04-qt安装"><span>Ubuntu 16.04 QT安装</span></a></h1><p>由于实验室和课程安排都是基于 QT4，因此这里安装QT4</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>sudo apt install qt4*</span></span>
<span class="line"><span>sudo apt install qtcreator</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="qt-基本操作" tabindex="-1"><a class="header-anchor" href="#qt-基本操作"><span>QT 基本操作</span></a></h1><h2 id="屏幕自适应" tabindex="-1"><a class="header-anchor" href="#屏幕自适应"><span>屏幕自适应</span></a></h2><p>先布局一个 layout，然后在全局框里，设置 layout</p><p>用以下代码自动全屏</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">QDesktopWidget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> desktopWidget </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> QApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">desktop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">QRect screenRect </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> desktopWidget</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">screenGeometry</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">resize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">screenRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">width</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">screenRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">height</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">());</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">showMaximized</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显示图片" tabindex="-1"><a class="header-anchor" href="#显示图片"><span>显示图片</span></a></h2><ol><li>布局一个 label</li><li>头文件添加 <code>#include &lt;QPixmap&gt;</code></li><li>构造函数添加 <code>ui-&gt;label-&gt;setPixmap(&quot;0.png&quot;)</code></li></ol><h2 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器"><span>定时器</span></a></h2><ol><li>主类声明一个指针 public: 下， <code>QTimer *display_timer;</code></li><li>头文件添加 <code>#include &lt;QTimer&gt;</code></li><li>构造函数添加</li></ol><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">display_timer </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> QTimer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//槽函数</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">connect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">display_timer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">SIGNAL</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">timeout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()),</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> SLOT</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">doChange</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()));</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">display_timer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>头文件 public slots: 声明 <code>doChange();</code></li><li>实现<code>doChange();</code>函数</li></ol><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> MainWindow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">doChange</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(){</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    qDebug</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">doChange</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    ui</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">label</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setPixmap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">QPixmap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">QString</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">num</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.png</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用<code>display_timer-&gt;start(1000);</code>来开启定时器</li><li>使用<code>display_timer-&gt;stop(1000);</code>来关闭定时器</li></ul><hr><h1 id="实验室环境qt交叉编译" tabindex="-1"><a class="header-anchor" href="#实验室环境qt交叉编译"><span>实验室环境QT交叉编译</span></a></h1><p>将QT程序编译成实验室开发板 ARM-linux 下能执行的程序。</p><h2 id="将工程文件拷贝到编译目录" tabindex="-1"><a class="header-anchor" href="#将工程文件拷贝到编译目录"><span>将工程文件拷贝到编译目录</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cp myproject /usr/local/Trolltech/QtEmbedded-4.8.5-arm/examples/ -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="执行-qmake" tabindex="-1"><a class="header-anchor" href="#执行-qmake"><span>执行 qmake</span></a></h2><p>这一步主要是生成 Makefile</p><p>实验室里为了区分，把 qmake 命令换成了 qmake-arm</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>qmake-arm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="执行-make" tabindex="-1"><a class="header-anchor" href="#执行-make"><span>执行 make</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>make完成后，可执行文件就生成了。通过串口传输到ARM实验箱上。</p><p>串口连接过程略。</p><h2 id="串口-本地-arm" tabindex="-1"><a class="header-anchor" href="#串口-本地-arm"><span>串口:本地 -&gt; ARM</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>rx myAPP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择 传输 -&gt; 发生 Xmodem</p><h2 id="解决arm实验箱的坑" tabindex="-1"><a class="header-anchor" href="#解决arm实验箱的坑"><span>解决ARM实验箱的坑</span></a></h2><ul><li>kill掉以下三个进程</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>/opt/Qtopia/bin/qpe</span></span>
<span class="line"><span>/opt/Qtopia/bin/qss</span></span>
<span class="line"><span>/opt/Qtioua/bin/quicklauncher</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>初始化环境变量</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>. setqt4env  # 不要漏了中间的空格</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>运行</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>./myApp -qws</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,41)]))}const h=i(n,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/ok9fv3qx/","title":"Linux环境QT编程","lang":"zh-CN","frontmatter":{"title":"Linux环境QT编程","comments":true,"categories":"Linux","tags":["linux"],"abbrlink":"10e2f7a0","createTime":"2018/04/11 13:26:40","permalink":"/article/ok9fv3qx/","description":"由于课程需要，需要在 Linux 环境下开发 QT 程序，因此开一篇文章来记录QT的知识点。 Ubuntu 16.04 QT安装 由于实验室和课程安排都是基于 QT4，因此这里安装QT4 QT 基本操作 屏幕自适应 先布局一个 layout，然后在全局框里，设置 layout 用以下代码自动全屏 显示图片 布局一个 label 头文件添加 #inclu...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/article/ok9fv3qx/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"Linux环境QT编程"}],["meta",{"property":"og:description","content":"由于课程需要，需要在 Linux 环境下开发 QT 程序，因此开一篇文章来记录QT的知识点。 Ubuntu 16.04 QT安装 由于实验室和课程安排都是基于 QT4，因此这里安装QT4 QT 基本操作 屏幕自适应 先布局一个 layout，然后在全局框里，设置 layout 用以下代码自动全屏 显示图片 布局一个 label 头文件添加 #inclu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux环境QT编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"屏幕自适应","slug":"屏幕自适应","link":"#屏幕自适应","children":[]},{"level":2,"title":"显示图片","slug":"显示图片","link":"#显示图片","children":[]},{"level":2,"title":"定时器","slug":"定时器","link":"#定时器","children":[]},{"level":2,"title":"将工程文件拷贝到编译目录","slug":"将工程文件拷贝到编译目录","link":"#将工程文件拷贝到编译目录","children":[]},{"level":2,"title":"执行 qmake","slug":"执行-qmake","link":"#执行-qmake","children":[]},{"level":2,"title":"执行 make","slug":"执行-make","link":"#执行-make","children":[]},{"level":2,"title":"串口:本地 -> ARM","slug":"串口-本地-arm","link":"#串口-本地-arm","children":[]},{"level":2,"title":"解决ARM实验箱的坑","slug":"解决arm实验箱的坑","link":"#解决arm实验箱的坑","children":[]}],"readingTime":{"minutes":1.47,"words":442},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"posts/linux/Linux环境QT编程.md","categoryList":[{"id":"18958e","sort":10000,"name":"posts"},{"id":"decce4","sort":10015,"name":"linux"}]}');export{h as comp,r as data};
