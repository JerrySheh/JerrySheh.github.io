import{_ as s,c as i,f as t,o as a}from"./app-D22ydJtp.js";const n="/images/Linux/reverseproxy.png",l="/images/Linux/proxy_1.png",r="/images/Linux/proxy_2.png",p="/images/Linux/proxy_3.png",d="/images/Linux/proxy_4.png",h="/images/Linux/ngrok.png",o={};function c(g,e){return a(),i("div",null,e[0]||(e[0]=[t('<h1 id="问题的来源" tabindex="-1"><a class="header-anchor" href="#问题的来源"><span>问题的来源</span></a></h1><p>从老师那里借了两台服务器跑数据，但是老师的服务器没有公网ip，只有学校内网ip，故只能在实验室或者图书馆登录。有没有什么办法，能让我在宿舍或者家里，远程连接进这两台学校内网的服务器呢？答案肯定的，那就是 <strong>反向代理</strong>。前提是，我得有一台有公网ip的服务器（例如，阿里云服务器或VPS都可以）。</p><p><img src="'+n+'" alt=""></p><hr><h1 id="什么是代理" tabindex="-1"><a class="header-anchor" href="#什么是代理"><span>什么是代理？</span></a></h1><p>要搞清楚什么是反向代理，就得知道什么是 <strong>代理（Proxy）</strong>。代理其实就是一个跳板。比如我要去图书馆借一本书，我把要借的书的信息写在纸上，交给图书馆管理员，由图书馆管理员去仓库帮我把书取出来交给我。那我们就说，图书馆管理员是我的代理。</p><p>在计算机网络中，代理分为 <strong>正向代理</strong> 和 <strong>反向代理</strong> 。</p><h2 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理"><span>正向代理</span></a></h2><p>假如我们访问不了某网站，但是代理服务器可以访问，我们可以让代理服务器去帮助我们访问目标网站，并把结果返回给我们。对于远程目标网站来说，它只得到了一次请求记录，并不知道是我们通过代理服务器访问的，因此正向代理隐藏了我们自身的信息，但也取决于代理服务器告不告诉目标网站。对于我们客户端来说，我自己是知道我使用了代理去访问某个网站的。</p><p><img src="'+l+'" alt=""></p><p>总的来说，正向代理是一个位于客户端（client）和原始服务器(origin server)之间的服务器（proxy server）。客户端为了从原始服务器取得内容，向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端必须要进行一些特别的设置才能使用正向代理。</p><h3 id="正向代理的用途" tabindex="-1"><a class="header-anchor" href="#正向代理的用途"><span>正向代理的用途</span></a></h3><ol><li>访问原来无法访问的资源，如Google</li><li>可以做缓存，加速访问资源，如nginx</li><li>对客户端访问授权，上网进行认证</li><li>代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</li></ol><h2 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理"><span>反向代理</span></a></h2><p>反向代理（Reverse Proxy）就是用来解决文章开头提出的问题的。在一些服务器群中，只有一台服务器（即反向代理服务器）向外接收来自互联网的连接请求。然后将请求转发给其他真正提供服务的服务器。对于远程服务器来说，服务器之间是知道代理的存在的，相反，对于我们客户端来说，我们并不知道我们连接的是一个反向代理服务器，我们只知道我们向对方发起了某请求，并获得了回应。</p><h3 id="反向代理的用途" tabindex="-1"><a class="header-anchor" href="#反向代理的用途"><span>反向代理的用途</span></a></h3><ol><li><strong>保证内网的安全</strong>：可以使用反向代理提供WAF功能，阻止web攻击。通常，大型网站都会将反向代理作为公网访问地址，Web服务器是内网。</li><li><strong>负载均衡</strong>：通过反向代理服务器来优化网站的负载</li></ol><p><img src="'+r+'" alt="proxy2"><img src="'+p+'" alt="proxy3"></p><h2 id="正向代理和反向代理的区别" tabindex="-1"><a class="header-anchor" href="#正向代理和反向代理的区别"><span>正向代理和反向代理的区别</span></a></h2><p><img src="'+d+`" alt="proxy2"></p><hr><h1 id="使用-ssh-反向代理" tabindex="-1"><a class="header-anchor" href="#使用-ssh-反向代理"><span>使用 SSH 反向代理</span></a></h1><p>回到文章开头的问题，如何使用反向代理，让我无论在哪里都可以访问学校内网的服务器呢？这就需要用到 SSH 的反向代理功能了。在学校内网服务器中，我们可以通过 SSH 设置反向代理，指向一个有公网ip的服务器（作为我们的反向代理服务器），之后用客户端连接公网服务器时，公网服务器会把请求转交给内网服务器，从而间接登录学校的内网服务器，<strong>整个过程，我们作为客户端是感知不到代理服务器的存在的。客户端是否能感知代理服务器的存在，是区别正向代理和反向代理的关键。</strong></p><h2 id="ssh-参数介绍" tabindex="-1"><a class="header-anchor" href="#ssh-参数介绍"><span>SSH 参数介绍</span></a></h2><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 反向代理命令</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fCNR</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 正向代理命令</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fCNL</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明：</p><table><thead><tr><th style="text-align:left;">Header One</th><th style="text-align:left;">Header Two</th></tr></thead><tbody><tr><td style="text-align:left;">-f</td><td style="text-align:left;">后台执行ssh指令</td></tr><tr><td style="text-align:left;">-C</td><td style="text-align:left;">允许压缩数据</td></tr><tr><td style="text-align:left;">-N</td><td style="text-align:left;">不执行远程指令</td></tr><tr><td style="text-align:left;">-R</td><td style="text-align:left;">将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口</td></tr><tr><td style="text-align:left;">-L</td><td style="text-align:left;">将本地机(客户机)的某个端口转发到远端指定机器的指定端口</td></tr><tr><td style="text-align:left;">-p</td><td style="text-align:left;">指定远程主机的端口</td></tr></tbody></table><h2 id="学校内网服务器操作" tabindex="-1"><a class="header-anchor" href="#学校内网服务器操作"><span>学校内网服务器操作</span></a></h2><p>先跑一趟实验室或图书馆，在内网里面进行操作。</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># ssh -fCNR 远程端口:localhost:本地端口 远程用户@远程ip</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fCNR</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 2999:localhost:22</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote_user@123.123.123.123</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这句命令的意思是，将远程公网服务器 2999 端口转发至本地 22 端口， <code>remote_user@123.123.123.123</code>是远程服务器用户名和ip</p><ul><li>使用 <code>ps aux | grep ssh</code> 来查看是否运行。</li></ul><h2 id="公网服务器操作" tabindex="-1"><a class="header-anchor" href="#公网服务器操作"><span>公网服务器操作</span></a></h2><p>恰好我有一台腾讯云服务器学生机，配有公网ip，可以拿这台服务器作为跳板机（远程代理服务器）。</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># ssh -fCNL *:客户端登录端口:localhost:本地端口 localhost</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fCNL</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> *</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:11111:localhost:2999</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> localhost</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这句命令的意思是，将 11111 端口作为本地转发端口，用于与互联网进行通信，并将数据转发至 2999 端口，而 2999 端口的数据会被刚刚配置的学校内网服务器接收。</p><h2 id="登录" tabindex="-1"><a class="header-anchor" href="#登录"><span>登录</span></a></h2><p>现在，用一台位于任意地方的电脑</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p11111</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 学校内网用户名@公网ip地址</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就可以访问到学校内网了。</p><h2 id="免密登录" tabindex="-1"><a class="header-anchor" href="#免密登录"><span>免密登录</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>ssh-copy-id 公网用户名@公网ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="用autossh建立稳定隧道" tabindex="-1"><a class="header-anchor" href="#用autossh建立稳定隧道"><span>用autossh建立稳定隧道</span></a></h2><p>autossh 跟 shh 不同的地方在于，当隧道断开的时候，autossh 会自动重新连接，而ssh不会。</p><p>centos 安装（内网服务器操作）</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>yum install autossh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>反向代理（内网服务器操作）</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>autossh -M 6666 -fCNR 2999:localhost:22 公网用户名@公网ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>-M参数指定一个端口，这个端口是公网机器用来接收内网机器的信息，如果隧道不正常而返回给内网机器让他实现重新连接。</p><h2 id="配置开机启动-内网服务器操作" tabindex="-1"><a class="header-anchor" href="#配置开机启动-内网服务器操作"><span>配置开机启动（内网服务器操作）</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>vi /etc/rc.d/rc.local</span></span>
<span class="line"><span>autossh -M 6666 -fCNR 2999:localhost:22 公网用户名@公网ip</span></span>
<span class="line"><span>chmod +x /etc/rc.d/rc.local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="不止ssh" tabindex="-1"><a class="header-anchor" href="#不止ssh"><span>不止SSH</span></a></h1><p>到这里就已经解决了文章一开始的问题了。但是突发奇想，除了ssh之外，有没有办法，能够远程访问没有公网ip的电脑上面架设的Web服务或者Ftp服务呢？例如，在家里的电脑（没有公网ip）上架了一个网站，那出门的时候有没有办法远程访问家里的整个网站？事实上，这是完全可行的，借助的也是反向代理，但有了一个新的名词——<strong>内网穿透</strong>。现在市面上内网穿透的软件很多，比如花生壳、ngrok，使用这些工具，不仅仅可以反向代理ssh的22端口，还可以代理任意 tcp 或 udp 端口，非常有用。</p><hr><h1 id="使用-ngrok-进行内网穿透" tabindex="-1"><a class="header-anchor" href="#使用-ngrok-进行内网穿透"><span>使用 ngrok 进行内网穿透</span></a></h1><p>ngrok 的官网是 https://ngrok.com/ ，是一个专注于建立反向代理隧道的软件。</p><p><img src="`+h+`" alt="ngrok"></p><h2 id="客户端使用方法" tabindex="-1"><a class="header-anchor" href="#客户端使用方法"><span>客户端使用方法</span></a></h2><p>到官网申请一个账号，会得到一个 TOKEN ，下载安装完客户端软件后，执行以下命令即可：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>unzip /path/to/ngrok.zip</span></span>
<span class="line"><span>./ngrok authtoken &lt;YOUR_AUTH_TOKEN&gt;</span></span>
<span class="line"><span>./ngrok http 8080</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，你内网机器的80端口即会被映射到公网上了。例如，访问 http://myapp.ngrok.io ，即相当于访问了你内网里面的 127.0.0.1:8080</p><h2 id="自己编译服务端软件" tabindex="-1"><a class="header-anchor" href="#自己编译服务端软件"><span>自己编译服务端软件</span></a></h2><p>ngrok是开源的，可以自己编译服务端软件，并将自己的公网服务器作为反向代理服务器。前提是得有公网ip + 域名（国内需备案）。</p><p>由于我没有域名，所以这部分就没有实践了。具体步骤可以参考官方文档教程：https://developer.github.com/webhooks/configuring/</p><hr><p>参考资料</p><ul><li><a href="https://www.cnblogs.com/kwongtai/p/6903420.html" target="_blank" rel="noopener noreferrer">利用ssh反向代理以及autossh实现从外网连接内网服务器</a></li></ul>`,68)]))}const m=s(o,[["render",c],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/article/heo5pid0/","title":"通过SSH反向代理连接学校内网服务器","lang":"zh-CN","frontmatter":{"title":"通过SSH反向代理连接学校内网服务器","categories":"瞎折腾","tags":["linux"],"abbrlink":"44ca081e","createTime":"2018/09/30 13:52:00","permalink":"/article/heo5pid0/","description":"问题的来源 从老师那里借了两台服务器跑数据，但是老师的服务器没有公网ip，只有学校内网ip，故只能在实验室或者图书馆登录。有没有什么办法，能让我在宿舍或者家里，远程连接进这两台学校内网的服务器呢？答案肯定的，那就是 反向代理。前提是，我得有一台有公网ip的服务器（例如，阿里云服务器或VPS都可以）。 什么是代理？ 要搞清楚什么是反向代理，就得知道什么是...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/article/heo5pid0/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"通过SSH反向代理连接学校内网服务器"}],["meta",{"property":"og:description","content":"问题的来源 从老师那里借了两台服务器跑数据，但是老师的服务器没有公网ip，只有学校内网ip，故只能在实验室或者图书馆登录。有没有什么办法，能让我在宿舍或者家里，远程连接进这两台学校内网的服务器呢？答案肯定的，那就是 反向代理。前提是，我得有一台有公网ip的服务器（例如，阿里云服务器或VPS都可以）。 什么是代理？ 要搞清楚什么是反向代理，就得知道什么是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://jerrysheh.com/images/Linux/reverseproxy.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通过SSH反向代理连接学校内网服务器\\",\\"image\\":[\\"https://jerrysheh.com/images/Linux/reverseproxy.png\\",\\"https://jerrysheh.com/images/Linux/proxy_1.png\\",\\"https://jerrysheh.com/images/Linux/proxy_2.png\\",\\"https://jerrysheh.com/images/Linux/proxy_3.png\\",\\"https://jerrysheh.com/images/Linux/proxy_4.png\\",\\"https://jerrysheh.com/images/Linux/ngrok.png\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"正向代理","slug":"正向代理","link":"#正向代理","children":[{"level":3,"title":"正向代理的用途","slug":"正向代理的用途","link":"#正向代理的用途","children":[]}]},{"level":2,"title":"反向代理","slug":"反向代理","link":"#反向代理","children":[{"level":3,"title":"反向代理的用途","slug":"反向代理的用途","link":"#反向代理的用途","children":[]}]},{"level":2,"title":"正向代理和反向代理的区别","slug":"正向代理和反向代理的区别","link":"#正向代理和反向代理的区别","children":[]},{"level":2,"title":"SSH 参数介绍","slug":"ssh-参数介绍","link":"#ssh-参数介绍","children":[]},{"level":2,"title":"学校内网服务器操作","slug":"学校内网服务器操作","link":"#学校内网服务器操作","children":[]},{"level":2,"title":"公网服务器操作","slug":"公网服务器操作","link":"#公网服务器操作","children":[]},{"level":2,"title":"登录","slug":"登录","link":"#登录","children":[]},{"level":2,"title":"免密登录","slug":"免密登录","link":"#免密登录","children":[]},{"level":2,"title":"用autossh建立稳定隧道","slug":"用autossh建立稳定隧道","link":"#用autossh建立稳定隧道","children":[]},{"level":2,"title":"配置开机启动（内网服务器操作）","slug":"配置开机启动-内网服务器操作","link":"#配置开机启动-内网服务器操作","children":[]},{"level":2,"title":"客户端使用方法","slug":"客户端使用方法","link":"#客户端使用方法","children":[]},{"level":2,"title":"自己编译服务端软件","slug":"自己编译服务端软件","link":"#自己编译服务端软件","children":[]}],"readingTime":{"minutes":7.11,"words":2133},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"posts/toss/通过SSH反向代理连接学校内网服务器.md","categoryList":[{"id":"18958e","sort":10000,"name":"posts"},{"id":"033bbb","sort":10011,"name":"toss"}]}');export{m as comp,v as data};
