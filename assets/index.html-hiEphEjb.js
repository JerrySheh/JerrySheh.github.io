import{_ as t,c as a,f as r,o}from"./app-D22ydJtp.js";const c={};function i(n,e){return o(),a("div",null,e[0]||(e[0]=[r('<p>这是《编程珠玑》 第一章开篇的一个提问。第一眼看到这个问题，脑海里是不是出现了各种冒泡排序、归并排序、快速排序算法，准备“大展身手”一番？然而正如作者接下来说的一样，这样做往往导致一上来就犯错误，错就错在马上回答了这个问题。</p><hr><h1 id="搞清楚问题再回答" tabindex="-1"><a class="header-anchor" href="#搞清楚问题再回答"><span>搞清楚问题再回答</span></a></h1><p>工作中发现身边很多人，包括我自己，都很容易陷入开篇这样的误区，拿到一个问题就急着解决，而没有经过仔细思考。或者，如果你是那个提出问题的人，你真的“把问题讲清楚”了吗？</p><p>回到开头的问题，当我们拿到一个问题时，先搞清楚对方为什么要这么问。</p><blockquote><p>“怎样给一个磁盘文件排序？”</p><p>“为什么要自己给文件排序，而不用系统提供的排序？”</p><p>“排序只是大系统中的一个功能，因为特殊原因，不能用系统自带的排序”</p><p>“排序的内容是什么？文件有多少条记录？每条记录的格式是什么？是否有重复？为什么不用内存排序，要用磁盘排序？”</p><p>&quot;排序的内容是7位的电话号码，最多有1000万条，没有重复，因为一些特殊原因，只有1MB内存能使用，但磁盘空间有富余&quot;</p></blockquote><p>现在我们搞清楚真正的问题了，他确实需要给磁盘文件排序，用通用的归并排序算法可以解决，但因为内存的限制，需要多次读取工作文件，势必会造成性能的下降。本着 <strong>特殊问题特殊分析</strong> 的原则，对于特定的需求，我们需要提供针对性的解法。</p><hr><h1 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题"><span>解决问题</span></a></h1><h2 id="位图" tabindex="-1"><a class="header-anchor" href="#位图"><span>位图</span></a></h2><p>可以用如下10位的位数组（或字符串）来表示集合 <code>{1,2,5,8}</code></p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>0 1 1 0 0 1 0 0 1 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="解决问题-1" tabindex="-1"><a class="header-anchor" href="#解决问题-1"><span>解决问题</span></a></h2><ol><li>用一个长度为 1000万 的位数组，一开始全部初始化为 <code>0</code></li><li>读取电话号码文件，对每一个电话号码，都在位数组对应的下标标记为 <code>1</code>。 （例如，电话号码 <code>800-1705</code>，就将数组的第 <code>8001705</code> 位置为<code>1</code> ）</li><li>遍历数组，对于标记为 <code>1</code> 的数组下标输出</li></ol><p>这样，我们就得到一个排好序的电话号码文件啦。回过头来，是不是发现这个解决方式非常巧妙？<strong>所以，作为提问者，学会提问是一门学问，作为回答者，不要一上来就急于回答，先搞清楚真正的问题所在，最后，用简单的设计来解决问题</strong>。</p><p>编程之外，亦是如此。</p>',16)]))}const p=t(c,[["render",i],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/data-structure/cf9tj9sc/","title":"“怎样给一个磁盘文件排序？”","lang":"zh-CN","frontmatter":{"title":"“怎样给一个磁盘文件排序？”","categories":"数据结构和算法","tags":["数据结构和算法"],"abbrlink":"cc82ce4f","createTime":"2021/04/11 16:56:29","permalink":"/data-structure/cf9tj9sc/","description":"这是《编程珠玑》 第一章开篇的一个提问。第一眼看到这个问题，脑海里是不是出现了各种冒泡排序、归并排序、快速排序算法，准备“大展身手”一番？然而正如作者接下来说的一样，这样做往往导致一上来就犯错误，错就错在马上回答了这个问题。 搞清楚问题再回答 工作中发现身边很多人，包括我自己，都很容易陷入开篇这样的误区，拿到一个问题就急着解决，而没有经过仔细思考。或者...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/data-structure/cf9tj9sc/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"“怎样给一个磁盘文件排序？”"}],["meta",{"property":"og:description","content":"这是《编程珠玑》 第一章开篇的一个提问。第一眼看到这个问题，脑海里是不是出现了各种冒泡排序、归并排序、快速排序算法，准备“大展身手”一番？然而正如作者接下来说的一样，这样做往往导致一上来就犯错误，错就错在马上回答了这个问题。 搞清楚问题再回答 工作中发现身边很多人，包括我自己，都很容易陷入开篇这样的误区，拿到一个问题就急着解决，而没有经过仔细思考。或者..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"数据结构和算法"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"“怎样给一个磁盘文件排序？”\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"位图","slug":"位图","link":"#位图","children":[]},{"level":2,"title":"解决问题","slug":"解决问题-1","link":"#解决问题-1","children":[]}],"readingTime":{"minutes":2.46,"words":738},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/data-structure/10.“怎样给一个磁盘文件排序？”.md"}');export{p as comp,d as data};
