import{_ as d,c as e,f as r,o as a}from"./app-D22ydJtp.js";const s={};function i(l,t){return a(),e("div",null,t[0]||(t[0]=[r(`<p>Linux 学习任重而道远，此文记录了我在 Linux 学习中需要知道或反复查阅使用的命令、表达式等内容，持续更新。</p><h1 id="系统文件" tabindex="-1"><a class="header-anchor" href="#系统文件"><span>系统文件</span></a></h1><h2 id="常见目录" tabindex="-1"><a class="header-anchor" href="#常见目录"><span>常见目录</span></a></h2><table><thead><tr><th>目录</th><th>作用</th></tr></thead><tbody><tr><td><code>/</code></td><td>根目录，是所有文件和目录的起点。</td></tr><tr><td><code>/bin</code></td><td>存放基本用户命令的二进制可执行文件，如 <code>ls</code>、<code>cp</code>、<code>mv</code> 等。</td></tr><tr><td><code>/boot</code></td><td>存放启动引导程序相关的文件，如内核、初始 RAM 磁盘镜像等。</td></tr><tr><td><code>/dev</code></td><td>包含设备文件，用于访问硬件设备，如硬盘、终端、输入设备等。</td></tr><tr><td><code>/etc</code></td><td>存放系统配置文件和脚本，如网络配置文件、服务配置文件等。</td></tr><tr><td><code>/home</code></td><td>每个用户的主目录，用于存放用户的个人文件、配置等。</td></tr><tr><td><code>/lib</code></td><td>存放基本系统程序使用的共享库和内核模块。</td></tr><tr><td><code>/media</code></td><td>挂载可移动介质的挂载点，如 CD/DVD、U 盘等。</td></tr><tr><td><code>/mnt</code></td><td>临时挂载文件系统的挂载点，常用于手动挂载磁盘或网络文件系统。</td></tr><tr><td><code>/opt</code></td><td>用于安装附加的第三方软件包，通常是可选的应用程序。</td></tr><tr><td><code>/proc</code></td><td>虚拟文件系统，提供内核和进程信息的接口，如系统信息和运行时数据。</td></tr><tr><td><code>/root</code></td><td>超级用户（root）的主目录，类似于普通用户的 <code>/home/username</code> 目录。</td></tr><tr><td><code>/run</code></td><td>用于存放系统运行时产生的临时文件和数据。</td></tr><tr><td><code>/sbin</code></td><td>存放系统管理命令的二进制可执行文件，通常只有 root 用户或具有管理员权限的用户才能执行这些命令。</td></tr><tr><td><code>/srv</code></td><td>存放系统服务提供的数据，如 Web 服务数据。</td></tr><tr><td><code>/sys</code></td><td>虚拟文件系统，提供与硬件设备和内核模块交互的接口。</td></tr><tr><td><code>/tmp</code></td><td>临时文件目录，存放系统和用户创建的临时文件，系统重启时该目录下的文件通常会被清除。</td></tr><tr><td><code>/usr</code></td><td>存放用户级程序和数据，包括许多二级目录，如 <code>/usr/bin</code>（用户二进制文件）、<code>/usr/lib</code>（用户共享库）和 <code>/usr/share</code>（共享数据）。</td></tr><tr><td><code>/var</code></td><td>存放可变数据文件，如日志文件、锁文件、邮箱、打印队列等。</td></tr></tbody></table><hr><h1 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h1><h2 id="常规命令" tabindex="-1"><a class="header-anchor" href="#常规命令"><span>常规命令</span></a></h2><table><thead><tr><th>常规命令</th><th>说明</th></tr></thead><tbody><tr><td>mkdir myweb</td><td>创建目录</td></tr><tr><td>mkdir -p myweb/www/static</td><td>创建多级目录</td></tr><tr><td>rmdir</td><td>删除空目录</td></tr><tr><td>pwd</td><td>显示当前目录</td></tr><tr><td>touch a.txt</td><td>如果 a.txt 不存在，生成一个新的空文档a.txt。如果a.txt存在，那么只更改该文档的时间信息。</td></tr><tr><td>echo</td><td>创建带有内容的文件（见标准输出）</td></tr><tr><td>cat</td><td>查看文件内容（当文件太大无法一页展示时，用more）</td></tr><tr><td>more</td><td>多屏查看文件内容 （ space-翻页 回车-下一行 q-退出）</td></tr><tr><td>less</td><td>多屏可滚动查看文件内容 （space-翻页 回车-下一行 q-退出 up/down-上下滚动 居然还可以用鼠标666）</td></tr><tr><td>whatis ls</td><td>显示ls命令的作用</td></tr><tr><td>man ls</td><td>显示ls命令的手册（space翻页 j下行 k上行 /关键字搜索 n下一个关键字 shift+n上一个关键字）</td></tr></tbody></table><h2 id="文件系统命令" tabindex="-1"><a class="header-anchor" href="#文件系统命令"><span>文件系统命令</span></a></h2><table><thead><tr><th>文件系统命令</th><th>说明</th></tr></thead><tbody><tr><td>cd</td><td>切换目录</td></tr><tr><td>cp a.txt b.txt</td><td>拷贝. 在工作目录下，将a.txt复制到文件b.txt</td></tr><tr><td>mv a.txt c.txt</td><td>重命名 a.txt 为 c.txt</td></tr><tr><td>mv a.txt /home/jerrysheh</td><td>将 a.txt 移动到 /home/jerrysheh 目录下</td></tr><tr><td>rm</td><td>删除文件</td></tr><tr><td>rm -r</td><td>删除包括子目录和子文件 （-r 表示 recursive，递归）</td></tr><tr><td>rm -f</td><td>强制删除</td></tr><tr><td>apropos -e “list directory contents”</td><td>精确反查带有”“list directory contents”功能的命令</td></tr><tr><td>ll -h</td><td>显示文件夹内文件详细信息</td></tr><tr><td>ls</td><td>显示当前目录下文件</td></tr><tr><td>ls -a</td><td>显示当前目录包括隐藏的文件</td></tr><tr><td>curl -o video.mp4 http:www.example.com/video.mp4</td><td>下载网络文件</td></tr></tbody></table><h2 id="压缩命令" tabindex="-1"><a class="header-anchor" href="#压缩命令"><span>压缩命令</span></a></h2><table><thead><tr><th>压缩命令</th><th>说明</th></tr></thead><tbody><tr><td>tar -zcvf xxxx.tar.gz /home/test</td><td>压缩 -z 有gzip属性的，，-c 压缩 -v 显示过程，-f 档案名（必须）</td></tr><tr><td>tar -zxvf xxxx.tar.gz -C /tmp</td><td>解压， -x 解压 ， 其他参数同上</td></tr><tr><td>zip -r mydata.zip mydata</td><td>把 mydata 文件夹压缩 -r 递归（包括子目录）</td></tr><tr><td>unzip mydata.zip -d mydatabak</td><td>解压 mydata.zip， -d 解压到指定目录</td></tr></tbody></table><h2 id="系统相关" tabindex="-1"><a class="header-anchor" href="#系统相关"><span>系统相关</span></a></h2><table><thead><tr><th>系统相关</th><th>说明</th></tr></thead><tbody><tr><td>shutdown now</td><td>关机</td></tr><tr><td>uname -a</td><td>查看内核信息</td></tr><tr><td>dpkg -i xxx.deb</td><td>安装已下载的.deb安装包</td></tr></tbody></table><h2 id="用户相关命令" tabindex="-1"><a class="header-anchor" href="#用户相关命令"><span>用户相关命令</span></a></h2><table><thead><tr><th>用户相关(在root下操作)</th><th>说明</th></tr></thead><tbody><tr><td>adduser jerry</td><td>创建 jerry 用户（自动创建/home目录）</td></tr><tr><td>useradd jerry</td><td>创建 jerry 用户 （需要手动配置/home目录）</td></tr><tr><td>passwd jerry</td><td>给 jerry 用户设置密码</td></tr><tr><td>userdel jerry</td><td>删除 jerry 用户</td></tr></tbody></table><blockquote><p>Tips 1: 如果不知道一个命令是干嘛用的，可以用 <code>--help</code> 参数显示帮助，或者用 <code>man ls</code> 显示手册。如 <code>ls --help</code> 和 <code>man ls</code>。按 <code>q</code> 离开 man 环境。</p></blockquote><blockquote><p>Tips 2: linux命令后面的参数，一般简写时是单横杠，如 <code>-h</code> ，全写是双横杠，如 <code>--help</code>。</p></blockquote><hr><h1 id="关于-ls-l-命令" tabindex="-1"><a class="header-anchor" href="#关于-ls-l-命令"><span>关于 ls -l 命令</span></a></h1><p>终端输入<code>ls -l</code></p><p>返回</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>total 8</span></span>
<span class="line"><span>drwxrwxr-x 2 jerrysheh jerrysheh 4096 Mar 27 11:59 download</span></span>
<span class="line"><span>drwxr-xr-x 3 root      root      4096 Apr 30 10:26 www</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="total" tabindex="-1"><a class="header-anchor" href="#total"><span>total</span></a></h2><p>total 是所列出内容的磁盘占用空间总和值（kbytes）。</p><blockquote><p>对于“占”的理解：数据在存放过程中占据的block的大小。比如，1个block占用4k，那8.7k数据，要用3个bolck来存储，也就占用12k空间。</p></blockquote><h2 id="每一行第一个字符" tabindex="-1"><a class="header-anchor" href="#每一行第一个字符"><span>每一行第一个字符</span></a></h2><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>d</td><td>目录（dirtectory）</td></tr><tr><td>-</td><td>普通文件</td></tr><tr><td>c</td><td>字符设备文件(character)</td></tr><tr><td>l</td><td>链接文件</td></tr><tr><td>b</td><td>块设备文件(block)</td></tr><tr><td>p</td><td>命令管道文件，与shell编程有关</td></tr><tr><td>s</td><td>sock文件，与shell编程有关</td></tr></tbody></table><p>块设备文件：</p><blockquote><p>块设备文件(block)，一般置于/dev目录下，设备文件是普通文件和程序访问硬件设备的入口，是很特殊的文件。没有文件大小，只有一个主设备号和一个辅设备号。一次传输数据为一整块的被称为块设备，如硬盘、光盘等。最小数据传输单位为一个数据块(通常一个数据块的大小为512字节)</p></blockquote><p>字符设备文件(character):</p><blockquote><p>一般置于/dev目录下，一次传输一个字节的设备被称为字符设备，如键盘、字符终端等，传输数据的最小单位为一个字节。</p></blockquote><hr><h1 id="linux-通配表达式" tabindex="-1"><a class="header-anchor" href="#linux-通配表达式"><span>Linux 通配表达式</span></a></h1><p>Linux 通配表达式 与 正则表达式 相类似，但语法有所不同。</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>×</td><td>任意多个字符</td></tr><tr><td>？</td><td>任意一个字符</td></tr><tr><td>[xyz]</td><td>字符 x 或 y 或 z</td></tr><tr><td>[0-3]</td><td>数字 0 到 3 其中一个</td></tr><tr><td>[b-e]</td><td>字符 b 到 e 其中一个</td></tr><tr><td>[^mnp]</td><td>不是 m 或 n 或 p 的 一个字符</td></tr></tbody></table><p>不要在删除文件到时候多敲了一个空格，会删除当前整个目录下的文件～</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$rm * .txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="文件权限相关" tabindex="-1"><a class="header-anchor" href="#文件权限相关"><span>文件权限相关</span></a></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>sudo chmod 755 a.txt</td><td>chmod = change mode ，改变 a.txt 的权限为 755</td></tr><tr><td>sudo chmod g-w a.txt</td><td>删去 同组 的 写（write）权限</td></tr><tr><td>sudo chmod go+r b.txt</td><td>同组 和 其他 用户 增加对 b.txt 的读取（read）权限</td></tr></tbody></table><p>说明： Linux中，每个文件都有 9 位读写执行的权限。分为三组，三位一组。分别对应拥有者用户(user)，拥有组(owner group)中的用户和所有其他用户(other)。 7 = 111（2进制），表示 User 有读/写/执行 的权限， 5 = 101（2进制），表示 Owner group 有 读/执行 的权限，但没有写的权限。见下表。</p><table><thead><tr><th>十进制数</th><th>二进制数</th><th>权限</th></tr></thead><tbody><tr><td>755</td><td>111 101 101</td><td>user 可读/写/执行， group 和 other 只能读/执行，不能写</td></tr><tr><td>710</td><td>111 001 000</td><td>user 可读/写/执行， group 只能执行， other没有任何权限</td></tr></tbody></table><p>功能表</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>u</td><td>用户（user）</td></tr><tr><td>g</td><td>同组（group）</td></tr><tr><td>o</td><td>其他（other）</td></tr><tr><td>a</td><td>所有 （all） 默认值</td></tr></tbody></table><ul><li>| 增加权限</li></ul><ul><li>| 减少权限 = | 给定唯一权限 r | 读 w | 写 x | 可执行</li></ul><hr><h1 id="快捷操作" tabindex="-1"><a class="header-anchor" href="#快捷操作"><span>快捷操作</span></a></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>ctrl+a</td><td>定位到命令开头</td></tr><tr><td>ctrl+e</td><td>定位到命令结尾</td></tr><tr><td>ctrl+ ←</td><td>定位到上一个单词</td></tr></tbody></table><hr><h1 id="标准输入-标准输出-标准错误-管道与重新定向" tabindex="-1"><a class="header-anchor" href="#标准输入-标准输出-标准错误-管道与重新定向"><span>标准输入，标准输出，标准错误，管道与重新定向</span></a></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>ls &gt; a.txt</td><td>不将 ls 命令的结果输出到屏幕上，而是输出到 a.txt 文件里面</td></tr><tr><td>ls &gt;&gt; a.txt</td><td>将 ls 命令的结果输出添加到 a.txt 文件的末尾</td></tr><tr><td>ls 2&gt;&gt; b.txt</td><td>如果ls命令出错，报错信息输出到 b.txt 的末尾</td></tr><tr><td>ls &gt; c.txt 2&gt;&amp;1</td><td>将结果和错误（如果同时有）都输出到 c.txt</td></tr><tr><td>cat &gt;&gt;filetest 2&gt;&amp;1 &lt;&lt;END</td><td>建立filetest文件，当输入遇到END时，退出</td></tr><tr><td>echo helloworld</td><td>将 helloworld 这段文本输出到标准输出（屏幕）</td></tr><tr><td>echo helloworld &gt; b.txt</td><td>将 helloworld 这段文本输出到 b.txt 文件里面</td></tr></tbody></table><blockquote><p>由于STDOUT与STDERR都会默认显示在终端上，为了区分二者的信息，就有了编号的0，1，2的定义，用1表示STDOUT，2表示STDERR。 <code>2&gt;&amp;1</code>，指标准错误重新定向到标准输出，即将标准输出、标准错误指定为同一输出路径。其中， <code>&amp;</code> 表示前面的命令放到后台执行。</p></blockquote><h2 id="管道" tabindex="-1"><a class="header-anchor" href="#管道"><span>管道</span></a></h2><p>以将一个命令的输出导向另一个命令的输入，从而让两个(或者更多命令)像流水线一样连续工作，不断地处理文本流。</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>cat</td><td>显示文件内容</td></tr><tr><td>wc word count</td><td>统计文本中的行、词以及字符的总数</td></tr></tbody></table><p>命令： <code>$cat &lt; a.txt | wc</code></p><p>执行步骤：</p><ol><li>输入（标准输入被重定向为 a.txt ） → cat（处理） → 输出（作为wc命令的输入）</li><li>输入（cat命令的输出） → wc（处理） → 输出（标准输出，屏幕）</li></ol><p>执行结果：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>jerrysheh@MI:~$ cat &lt; a.txt | wc</span></span>
<span class="line"><span>      2       2      22</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>命令： <code>$head -n 3 /etc/passwd | sort</code></p><p>将 passwd 文件到前3行输出并排序</p><p>可以使用 <code>xargs</code> 参数，让管道接受命令行参数</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>echo /etc/nano | xargs -i cp {} /tmp/dir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将echo的输出作为参数，填入 cp 中的{}</p><hr><h1 id="使用-grep、cut、awk-过滤信息" tabindex="-1"><a class="header-anchor" href="#使用-grep、cut、awk-过滤信息"><span>使用 grep、cut、awk 过滤信息</span></a></h1><h2 id="_1-查看-ls-命令的-l-参数用途" tabindex="-1"><a class="header-anchor" href="#_1-查看-ls-命令的-l-参数用途"><span>1. 查看 ls 命令的 -l 参数用途</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ls</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --help</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -l</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-查看-mkdir-命令的-p-参数用途" tabindex="-1"><a class="header-anchor" href="#_2-查看-mkdir-命令的-p-参数用途"><span>2. 查看 mkdir 命令的 -p 参数用途</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --help</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -p</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-搜索-usr-include-目录下-含有-int-printf-的文件内容-输出到-tmp-out-txt-上" tabindex="-1"><a class="header-anchor" href="#_3-搜索-usr-include-目录下-含有-int-printf-的文件内容-输出到-tmp-out-txt-上"><span>3. 搜索 /usr/include 目录下，含有 int printf 的文件内容，输出到 /tmp/out.txt 上</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">grep</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -inr</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">int printf</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/include</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /tmp/out.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>grep参数</p><ul><li>-i 忽略大小写</li><li>-n 打印行号</li><li>-r 包含子目录</li></ul><h2 id="_4-搜索-usr-include-目录下-含有-int-printf-的文件内容-用-cut-剪切每个搜索结果以冒号分隔的第一片" tabindex="-1"><a class="header-anchor" href="#_4-搜索-usr-include-目录下-含有-int-printf-的文件内容-用-cut-剪切每个搜索结果以冒号分隔的第一片"><span>4. 搜索 /usr/include 目录下，含有 int printf 的文件内容，用 cut 剪切每个搜索结果以冒号分隔的第一片</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">grep</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -inr</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">int printf</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/include</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> cut</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>cut 参数：</p><ul><li>-d 分割</li><li>-f 第几片</li></ul><h2 id="_5-搜索-acc-日志-过滤出-product-querylist-接口响应大于-0-5-秒的请求" tabindex="-1"><a class="header-anchor" href="#_5-搜索-acc-日志-过滤出-product-querylist-接口响应大于-0-5-秒的请求"><span>5. 搜索 acc 日志，过滤出 <code>/product/queryList</code> 接口响应大于 0.5 秒的请求</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cat access_log.acc | awk -F&quot; &quot; &#39;$3&gt;0.5{print $0}&#39; | grep &quot;/product/queryList&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>awk 参数：</p><ul><li><code>-F&quot; &quot;</code>：以空格为分隔符</li><li><code>$3&gt;0.5</code>：分隔后的第三列（响应时间所在的列）数值大于 0.5</li><li><code>{print $0}</code>：打印整行</li></ul><hr><h1 id="vim" tabindex="-1"><a class="header-anchor" href="#vim"><span>vim</span></a></h1><h2 id="vim命令相关" tabindex="-1"><a class="header-anchor" href="#vim命令相关"><span>vim命令相关</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>:q</td><td>退出</td></tr><tr><td>:q!</td><td>强制退出</td></tr><tr><td>:wq</td><td>保存并退出</td></tr><tr><td>:set number</td><td>显示行号</td></tr><tr><td>:set nonumber</td><td>隐藏行号</td></tr><tr><td>/apache</td><td>在文档中查找apache, n 下一个，shift+n 上一个</td></tr></tbody></table><h2 id="vim操作相关" tabindex="-1"><a class="header-anchor" href="#vim操作相关"><span>vim操作相关</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>h</td><td>左移</td></tr><tr><td>j</td><td>下一行</td></tr><tr><td>k</td><td>上一行</td></tr><tr><td>l</td><td>右移</td></tr><tr><td>a</td><td>补充文本（修改完记得Esc退出编辑模式）</td></tr><tr><td>i</td><td>插入文本（修改完记得Esc退出编辑模式）</td></tr><tr><td>x</td><td>删除光标所指字符</td></tr><tr><td>ra</td><td>替换光标所指字符为a</td></tr><tr><td>u</td><td>撤销</td></tr><tr><td>U</td><td>撤销整行</td></tr><tr><td>0 （zero）</td><td>光标移动到行首</td></tr><tr><td>ce</td><td>删除光标所指到单词末尾，并进入编辑模式</td></tr><tr><td>ctrl+F</td><td>下一页</td></tr><tr><td>ctrl+B</td><td>上一页</td></tr><tr><td>ctrl+E</td><td>下滚一行</td></tr><tr><td>ctrl+Y</td><td>上滚一行</td></tr></tbody></table><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>dw</td><td>从光标处删除至一个单字/单词的末尾</td></tr><tr><td>d2w</td><td>从光标处删除至两个单字/单词的末尾</td></tr><tr><td>d$</td><td>从光标处删除这一行光标后面的内容</td></tr><tr><td>2w</td><td>光标往前两个单词（单词词首）</td></tr><tr><td>2e</td><td>光标往前两个单词（单词词尾）</td></tr><tr><td>dd</td><td>删除行</td></tr><tr><td>2dd</td><td>删除两行</td></tr><tr><td>ddp</td><td>删除光标所在行，光标移动到其他位置，粘贴</td></tr><tr><td>yyp</td><td>复制光标所在行，光标移动到其他位置，粘贴</td></tr></tbody></table>`,92)]))}const h=d(s,[["render",i],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/article/1uzohr8f/","title":"给自己的 Linux 备忘","lang":"zh-CN","frontmatter":{"title":"给自己的 Linux 备忘","categories":"Linux","tags":["Linux"],"abbrlink":"ee3d8fa1","createTime":"2017/09/24 14:28:00","permalink":"/article/1uzohr8f/","description":"Linux 学习任重而道远，此文记录了我在 Linux 学习中需要知道或反复查阅使用的命令、表达式等内容，持续更新。 系统文件 常见目录 常用命令 常规命令 文件系统命令 压缩命令 系统相关 用户相关命令 Tips 1: 如果不知道一个命令是干嘛用的，可以用 --help 参数显示帮助，或者用 man ls 显示手册。如 ls --help 和 man...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/article/1uzohr8f/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"给自己的 Linux 备忘"}],["meta",{"property":"og:description","content":"Linux 学习任重而道远，此文记录了我在 Linux 学习中需要知道或反复查阅使用的命令、表达式等内容，持续更新。 系统文件 常见目录 常用命令 常规命令 文件系统命令 压缩命令 系统相关 用户相关命令 Tips 1: 如果不知道一个命令是干嘛用的，可以用 --help 参数显示帮助，或者用 man ls 显示手册。如 ls --help 和 man..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"给自己的 Linux 备忘\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"常见目录","slug":"常见目录","link":"#常见目录","children":[]},{"level":2,"title":"常规命令","slug":"常规命令","link":"#常规命令","children":[]},{"level":2,"title":"文件系统命令","slug":"文件系统命令","link":"#文件系统命令","children":[]},{"level":2,"title":"压缩命令","slug":"压缩命令","link":"#压缩命令","children":[]},{"level":2,"title":"系统相关","slug":"系统相关","link":"#系统相关","children":[]},{"level":2,"title":"用户相关命令","slug":"用户相关命令","link":"#用户相关命令","children":[]},{"level":2,"title":"total","slug":"total","link":"#total","children":[]},{"level":2,"title":"每一行第一个字符","slug":"每一行第一个字符","link":"#每一行第一个字符","children":[]},{"level":2,"title":"管道","slug":"管道","link":"#管道","children":[]},{"level":2,"title":"1. 查看 ls 命令的 -l 参数用途","slug":"_1-查看-ls-命令的-l-参数用途","link":"#_1-查看-ls-命令的-l-参数用途","children":[]},{"level":2,"title":"2. 查看 mkdir 命令的 -p 参数用途","slug":"_2-查看-mkdir-命令的-p-参数用途","link":"#_2-查看-mkdir-命令的-p-参数用途","children":[]},{"level":2,"title":"3. 搜索 /usr/include 目录下，含有 int printf 的文件内容，输出到 /tmp/out.txt 上","slug":"_3-搜索-usr-include-目录下-含有-int-printf-的文件内容-输出到-tmp-out-txt-上","link":"#_3-搜索-usr-include-目录下-含有-int-printf-的文件内容-输出到-tmp-out-txt-上","children":[]},{"level":2,"title":"4. 搜索 /usr/include 目录下，含有 int printf 的文件内容，用 cut 剪切每个搜索结果以冒号分隔的第一片","slug":"_4-搜索-usr-include-目录下-含有-int-printf-的文件内容-用-cut-剪切每个搜索结果以冒号分隔的第一片","link":"#_4-搜索-usr-include-目录下-含有-int-printf-的文件内容-用-cut-剪切每个搜索结果以冒号分隔的第一片","children":[]},{"level":2,"title":"5. 搜索 acc 日志，过滤出 /product/queryList 接口响应大于 0.5 秒的请求","slug":"_5-搜索-acc-日志-过滤出-product-querylist-接口响应大于-0-5-秒的请求","link":"#_5-搜索-acc-日志-过滤出-product-querylist-接口响应大于-0-5-秒的请求","children":[]},{"level":2,"title":"vim命令相关","slug":"vim命令相关","link":"#vim命令相关","children":[]},{"level":2,"title":"vim操作相关","slug":"vim操作相关","link":"#vim操作相关","children":[]}],"readingTime":{"minutes":9.88,"words":2964},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"posts/linux/给自己的Linux备忘.md","categoryList":[{"id":"18958e","sort":10000,"name":"posts"},{"id":"decce4","sort":10015,"name":"linux"}]}');export{h as comp,c as data};
