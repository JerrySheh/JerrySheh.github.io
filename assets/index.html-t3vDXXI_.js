import{_ as s,c as a,f as n,o as e}from"./app-D22ydJtp.js";const t="/images/Learn_Android/Android.jpg",l="/images/Learn_Android/Android_Framework.png",d="/images/Learn_Android/stru.png",p="/images/Learn_Android/Android_project.png",r={};function o(h,i){return e(),a("div",null,i[0]||(i[0]=[n('<p><img src="'+t+'" alt="Android 8"></p><h1 id="android-简介" tabindex="-1"><a class="header-anchor" href="#android-简介"><span>Android 简介</span></a></h1><blockquote><p>Android，常见的非官方中文名称为安卓，是一个基于Linux内核的开放源代码移动操作系统，由Google成立的Open Handset Alliance（OHA，开放手持设备联盟）持续领导与开发，主要设计用于触屏移动设备如智能手机和平板电脑与其他便携式设备。</p></blockquote><blockquote><p>Android最初由安迪·鲁宾等人开发制作，最初开发这个系统的目的是创建一个数码相机的先进操作系统；但是后来发现市场需求不够大，加上智能手机市场快速成长，于是Android成为一款面向智能手机的操作系统。</p></blockquote><blockquote><p>于2005年7月11日被美国科技企业Google收购。</p></blockquote><blockquote><p>2007年11月，Google与84家硬件制造商、软件开发商及电信营运商成立开放手持设备联盟来共同研发改良Android，随后，Google以Apache免费开放源代码许可证的授权方式，发布了Android的源代码（<a href="https://source.android.com" target="_blank" rel="noopener noreferrer">Android OpenSource Projet</a>），开放源代码加速了Android普及，让生产商推出搭载Android的智能手机，Android后来更逐渐拓展到平板电脑及其他领域上。</p></blockquote><blockquote><p>2010年末数据显示，仅正式推出两年的Android操作系统在市场占有率上已经超越称霸逾十年的诺基亚Symbian系统，成为全球第一大智能手机操作系统。</p></blockquote><blockquote><p>在2014年Google I/O开发者大会上Google宣布过去30天里有10亿台活跃的安卓设备，相较于2013年6月则是5.38亿。</p></blockquote><blockquote><p>2017年3月，Android全球网络流量和设备超越Microsoft Windows，正式成为全球第一大操作系统。</p></blockquote><blockquote><p>2017年8月，Android O发布。</p></blockquote><p>以上简介来自Wikipedia，可见 Android 前景还是非常大的。作为一个移动开发者，学习Android也是势在必行了。</p><p>本次Android的学习，我采用书本+视频的方式。</p><p>参考书籍是：</p><ul><li><a href="https://book.douban.com/subject/26915433/" target="_blank" rel="noopener noreferrer">第一行代码（第二版）（郭霖）</a></li></ul><p>参考视频：</p><p>对于没有编程基础的:</p><ul><li><a href="https://classroom.udacity.com/courses/ud834" target="_blank" rel="noopener noreferrer">Android 基础：用户界面</a></li><li><a href="https://cn.udacity.com/course/android-basics-user-input--ud836" target="_blank" rel="noopener noreferrer">Android 基础：用户输入</a></li><li><a href="https://cn.udacity.com/course/android-basics-multi-screen-apps--ud839" target="_blank" rel="noopener noreferrer">Android 基础：多屏应用</a></li><li><a href="https://cn.udacity.com/course/android-basics-networking--ud843" target="_blank" rel="noopener noreferrer">Android 基础：网络</a></li><li><a href="https://cn.udacity.com/course/android-basics-data-storage--ud845" target="_blank" rel="noopener noreferrer">Android 基础：数据存储</a></li></ul><p>有编程基础可以直接从这个开始：</p><ul><li><a href="https://classroom.udacity.com/courses/ud851" target="_blank" rel="noopener noreferrer">Android应用开发</a></li></ul><hr><h1 id="android-系统架构" tabindex="-1"><a class="header-anchor" href="#android-系统架构"><span>Android 系统架构</span></a></h1><p>Android系统架构可以分为五层，分别是：</p><ul><li><strong>应用层（System app）</strong>，所有安装在手机上的app都是应用层的，包括系统自带app和第三方开发的app。</li><li><strong>应用框架层（Java API Framework）</strong>，提供了构建应用程序时需要的API。</li><li><strong>系统运行库（Native C/C++ Libraries） 和 Android Runtime</strong>， 通过C/C++库来为Android系统提供主要的特性支持。如SQLite库提供数据库支持，OpenGL/ES库提供3D绘图支持，Webkit库提供浏览器内核支持等。Android Runtime是Android的核心库，为Android应用跨平台使用提供的可靠方案，每个app都会有自己独立的运行空间和虚拟机。允许开发者使用Java、Kotlin编写Android应用。</li><li><strong>硬件抽象层（Hardware Abstraction Layer, HAL）</strong> 主要与manufacture和chip vendor相关，manufacture提供HAL的实现以及各种硬件设备的驱动和集成chip vendor提供的firmware。</li><li><strong>Linux内核层（Linux Kernel）</strong>，为硬件提供了底层驱动，如显示驱动，照相机驱动，音频驱动，蓝牙驱动等。</li></ul><p><img src="'+l+`" alt="Android Framework"></p><p>关于 Framework 的一些知识点：</p><blockquote><p>隐藏在每个应用后面的是一系列的服务和系统, 其中包括；</p><p>a. <strong>丰富而又可扩展的视图（Views）</strong>，可以用来构建应用程序， 它包括列表（lists），网格（grids），文本框（text boxes），按钮（buttons）， 甚至可嵌入的web浏览器。</p><p>b. <strong>内容提供器（Content Providers）</strong> 使得应用程序可以访问另一个应用程序的数据（如联系人数据库）， 或者共享它们自己的数据。</p><p>c. <strong>资源管理器（Resource Manager）</strong> 提供非代码资源的访问，如本地字符串，图形，和布局文件（layout files）。</p><p>d. <strong>通知管理器（Notification Manager）</strong> 使得应用程序可以在状态栏中显示自定义的提示信息。</p><p>e. <strong>活动管理器（Activity Manager）</strong> 用来管理应用程序生命周期并提供常用的导航回退功能。</p></blockquote><hr><h1 id="android-四大组件" tabindex="-1"><a class="header-anchor" href="#android-四大组件"><span>Android 四大组件</span></a></h1><p>Android 系统的四大组件分别是活动（Activity）、服务（Service）、广播接收器（Broadcast Receiver）、内容提供器（Content Providers）。</p><h2 id="活动-activity" tabindex="-1"><a class="header-anchor" href="#活动-activity"><span>活动（Activity）</span></a></h2><p>在 Android 应用中我们能看到的东西，都是放在活动当中的。活动是一种能够包含用户界面的组件，主要用于和用户交互。值得注意的是，在Android中，有一种能够嵌入在活动当中的UI片段，称为<code>碎片（Fragment）</code>，它和活动十分相似。</p><h2 id="服务-service" tabindex="-1"><a class="header-anchor" href="#服务-service"><span>服务（Service）</span></a></h2><p>服务是 Android 中实现程序后台运行的解决方案。它非常适合去执行那些不需要和用户交互而且需要长期运行的任务。服务依赖于所在应用程序的进程，不单独运行。值得注意的是，服务不会自动开启线程，所有的代码默认在主线程运行。因此需要我们手动在服务内部创建子线程。</p><h2 id="广播接收器-broadcast-receiver" tabindex="-1"><a class="header-anchor" href="#广播接收器-broadcast-receiver"><span>广播接收器（Broadcast Receiver）</span></a></h2><p>广播接收器允许你的应用接收来自各处的广播消息，比如电话、短信等。同样也可以向外发出广播消息。Android 中的广播可以分为以下两种：</p><ul><li><p><code>标准广播（Normal Broadcast）</code>，一种完全异步执行的广播，当广播发出后，所有的广播接收器几乎同一时刻接收到这条广播信息，没有先后顺序之分。这种广播效率高，但无法截断。</p></li><li><p><code>有序广播（Ordered Broadcast）</code>，一种同步执行的广播，当广播发出后，同一时刻只有一个广播接收器收到这条广播，当这个广播接收器的逻辑执行完毕后，广播才会继续传递。这样一来，优先级高的广播接收器可以先收到广播，并且前面的广播接收器可以截断正在传递的广播。</p></li></ul><h2 id="内容提供器-content-providers" tabindex="-1"><a class="header-anchor" href="#内容提供器-content-providers"><span>内容提供器（Content Providers）</span></a></h2><p>内容提供器则是为应用程序之间共享数据提供可能的机制。比如，你的应用程序需要读取系统通讯录中的联系人信息，就需要通过内容提供器实现。</p><hr><h1 id="material-design" tabindex="-1"><a class="header-anchor" href="#material-design"><span>Material Design</span></a></h1><p>Material Design(材料设计语言)，是由Google推出的全新的设计语言，谷歌表示，这种设计语言旨在为手机、平板电脑、台式机和“其他平台”提供更一致、更广泛的“外观和感觉”。</p><p><img src="http://www.comestsavatino.com/wp-content/uploads/2014/12/finance_3d_web.jpg" alt="MD"></p><hr><h1 id="android-studio" tabindex="-1"><a class="header-anchor" href="#android-studio"><span>Android Studio</span></a></h1><p>Android Studio 是 Google 官方提供的 Android IDE，提供用于为各类 Android 设备开发应用的最快速的工具。</p><p>下载地址：https://developer.android.com/studio/index.html</p><p><img src="https://developer.android.com/images/tools/studio/studio-feature-devices_2x.png" alt="Studio"></p><p>下载和使用 Android Studio 需要连接 Goole 服务器下载数据，然而根据众所周知的原因，无法科学上网的童鞋需要另辟蹊径了。最好还是学会如何科学上网。（当然，是为了学习和开发）</p><p>在第一次创建Android Studio project的时候，如果没有科学上网，有可能会遇到卡在<code>building “project name”gradle project info</code>的问题。可以通过下载离线gradle包手动安装。 <a href="http://blog.csdn.net/liuhuiyi/article/details/21861733" target="_blank" rel="noopener noreferrer">参考链接</a></p><hr><h1 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld"><span>HelloWorld</span></a></h1><p>使用 Android Studio 创建第一个 helloworld project之后，会自动生成一些代码。先来看一下这些自动生成的代码都表示什么。</p><h2 id="androidmanifest-xml" tabindex="-1"><a class="header-anchor" href="#androidmanifest-xml"><span>AndroidManifest.xml</span></a></h2><p>在工程目录下可以看到AndroidManifest.xml，在这个xml里面有如下语句</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">activity</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.MainActivity</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">intent-filter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">action</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">android.intent.action.MAIN</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">category</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">android.intent.category.LAUNCHER</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">intent-filter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">activity</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Android 应用程序基于活动，而每一个活动都要在 AndroidManifest.xml 进行注册，没有注册的活动是不能使用的。这段代码就是注册了 <code>MainActivity</code>这个活动。</p><h2 id="mainactivity-java" tabindex="-1"><a class="header-anchor" href="#mainactivity-java"><span>MainActivity.java</span></a></h2><p>MainActivity.java中自动生成的代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">package</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> com</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">jerrysheh</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">hello</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">support</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">v7</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">AppCompatActivity</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">os</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Bundle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> MainActivity</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> AppCompatActivity</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    @</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    protected</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> onCreate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Bundle </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">savedInstanceState</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">        super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">onCreate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">savedInstanceState</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        setContentView</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">R</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">activity_main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分析：</p><ul><li><code>MainActivity</code>继承自<code>AppCompatActivity</code>，让这个活动支持系统版本向下兼容。</li></ul><blockquote><p><code>Activity</code>是 Android 系统提供的一个活动基类，我们项目中所有的活动都必须继承它或者它的子类。<code>AppCompatActivity</code>是<code>Activity</code>的子类。</p></blockquote><ul><li><code>onCreate</code>方法第二行调用了<code>setContentView()</code>，参数指向了<code>layout.activity_main</code>。也就是说，<code>setContentView()</code>方法将我们的<code>activity_main.xml</code>和<code>MainActivity.java</code>关联了起来。</li></ul><p>不妨打开activity_main.xml看看。</p><h2 id="activity-main-xml" tabindex="-1"><a class="header-anchor" href="#activity-main-xml"><span>activity_main.xml</span></a></h2><p>打开activity_main.xml，Android Studio默认是Design视图，在下面按钮切换到text视图。</p><p>可以看到，activity_main中有几行关键代码：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">TextView</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout_width</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">wrap_content</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout_height</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">wrap_content</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello World!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout_constraintBottom_toBottomOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">parent</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout_constraintLeft_toLeftOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">parent</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout_constraintRight_toRightOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">parent</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">layout_constraintTop_toTopOf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">parent</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不用说，定义了视图界面以及显示的信息。 我们熟悉的<code>Hello World!</code>正是在这里。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>Android程序设计讲究逻辑和视图分离，所以逻辑代码写在MainActivity.java中，视图界面写在activity_main.xml中。在逻辑代码中的活动，需要先到AndroidManifest.xml进行注册。</p><blockquote><p>方便的是，当我们创建一个新的 Activity，Android Studio会自动帮我们注册。如果你用的是 Eclipse 或其他IDE，可能要手动进行注册。</p></blockquote><hr><h1 id="build-gradle" tabindex="-1"><a class="header-anchor" href="#build-gradle"><span>build.gradle</span></a></h1><p>Gradle是一个先进的项目构建工具，它使用一种基于Groovy的领域特定语言（DSL）来声明项目设置，摒弃了传统基于XML（如Ant和Maven）的各种繁琐设置。</p><p>Android Project 会首先经过gradle构建，gradle会将你的代码构建成字节码和资源，打包成APK，然后经过jar签名，最后通过adb安装到虚拟或真实的Android设备上。</p><p><img src="`+d+'" alt="project"></p><p>在Android Studio中，有多种项目构造目录，其中默认的Android方式是IDE自动调整的，方便我们查看文件。而只有project目录结构是真实存放在我们硬盘里的组织结构。</p><p><img src="'+p+`" alt="project"></p><p>切换到project目录结构，可以看到 Helloworld项目有两个 build.gradle 文件。</p><h2 id="外层build-gradle" tabindex="-1"><a class="header-anchor" href="#外层build-gradle"><span>外层build.gradle</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>buildscript {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    dependencies {</span></span>
<span class="line"><span>        classpath &#39;com.android.tools.build:gradle:3.0.1&#39;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>allprojects {</span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>jcenter是一个代码托管仓库，声明了<code>jcenter()</code>后我们可以轻松引用任何jcenter上的开源项目。<code>google()</code>同理。</p></li><li><p><code>classpath</code>声明了一个 Gradle插件。用于构建 Android 项目。</p></li></ul><h2 id="内层build-gradle" tabindex="-1"><a class="header-anchor" href="#内层build-gradle"><span>内层build.gradle</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>apply plugin: &#39;com.android.application&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>android {</span></span>
<span class="line"><span>    compileSdkVersion 26</span></span>
<span class="line"><span>    defaultConfig {</span></span>
<span class="line"><span>        applicationId &quot;com.jerrysheh.hello&quot;</span></span>
<span class="line"><span>        minSdkVersion 15</span></span>
<span class="line"><span>        targetSdkVersion 26</span></span>
<span class="line"><span>        versionCode 1</span></span>
<span class="line"><span>        versionName &quot;1.0&quot;</span></span>
<span class="line"><span>        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    buildTypes {</span></span>
<span class="line"><span>        release {</span></span>
<span class="line"><span>            minifyEnabled false</span></span>
<span class="line"><span>            proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>dependencies {</span></span>
<span class="line"><span>    implementation fileTree(dir: &#39;libs&#39;, include: [&#39;*.jar&#39;])</span></span>
<span class="line"><span>    implementation &#39;com.android.support:appcompat-v7:26.1.0&#39;</span></span>
<span class="line"><span>    implementation &#39;com.android.support.constraint:constraint-layout:1.0.2&#39;</span></span>
<span class="line"><span>    testImplementation &#39;junit:junit:4.12&#39;</span></span>
<span class="line"><span>    androidTestImplementation &#39;com.android.support.test:runner:1.0.1&#39;</span></span>
<span class="line"><span>    androidTestImplementation &#39;com.android.support.test.espresso:espresso-core:3.0.1&#39;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>第一行<code>com.android.application</code>表示这是一个应用程序模块，如果是<code>com.android.library</code>表示这是一个库模块。应用程序模块可以直接运行，库模块需要依附别的应用程序模块。</p></li><li><p><code>android</code>闭包配置了项目构建的属性。</p></li><li><p><code>buildTypes</code>闭包用于指定生成安装文件的相关配置。</p></li><li><p><code>dependencies</code>闭包指定当前项目的所有依赖关系。Android Studio有3种依赖方式：本地依赖、库依赖、远程依赖。</p></li></ul><hr><h1 id="android-debug-bridge-adb" tabindex="-1"><a class="header-anchor" href="#android-debug-bridge-adb"><span>Android Debug Bridge （ADB）</span></a></h1><p>ADB 是 Android 的 SDK 包含的命令行工具。用于调试。</p><p>要从命令行中启动 Android 应用，你可以输入：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>adb shell am start -n com.package.name/com.package.name.ActivityName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,91)]))}const k=s(r,[["render",o],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/article/b8d1b108/","title":"Android笔记（一） 初识","lang":"zh-CN","frontmatter":{"title":"Android笔记（一） 初识","comments":true,"abbrlink":"4afa9fc3","createTime":"2018/01/21 20:21:23","categories":"Android","tags":["Android"],"permalink":"/article/b8d1b108/","description":"Android 8 Android 简介 Android，常见的非官方中文名称为安卓，是一个基于Linux内核的开放源代码移动操作系统，由Google成立的Open Handset Alliance（OHA，开放手持设备联盟）持续领导与开发，主要设计用于触屏移动设备如智能手机和平板电脑与其他便携式设备。 Android最初由安迪·鲁宾等人开发制作，最初...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/article/b8d1b108/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"Android笔记（一） 初识"}],["meta",{"property":"og:description","content":"Android 8 Android 简介 Android，常见的非官方中文名称为安卓，是一个基于Linux内核的开放源代码移动操作系统，由Google成立的Open Handset Alliance（OHA，开放手持设备联盟）持续领导与开发，主要设计用于触屏移动设备如智能手机和平板电脑与其他便携式设备。 Android最初由安迪·鲁宾等人开发制作，最初..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://jerrysheh.com/images/Learn_Android/Android.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"Android"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android笔记（一） 初识\\",\\"image\\":[\\"https://jerrysheh.com/images/Learn_Android/Android.jpg\\",\\"https://jerrysheh.com/images/Learn_Android/Android_Framework.png\\",\\"http://www.comestsavatino.com/wp-content/uploads/2014/12/finance_3d_web.jpg\\",\\"https://developer.android.com/images/tools/studio/studio-feature-devices_2x.png\\",\\"https://jerrysheh.com/images/Learn_Android/stru.png\\",\\"https://jerrysheh.com/images/Learn_Android/Android_project.png\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"活动（Activity）","slug":"活动-activity","link":"#活动-activity","children":[]},{"level":2,"title":"服务（Service）","slug":"服务-service","link":"#服务-service","children":[]},{"level":2,"title":"广播接收器（Broadcast Receiver）","slug":"广播接收器-broadcast-receiver","link":"#广播接收器-broadcast-receiver","children":[]},{"level":2,"title":"内容提供器（Content Providers）","slug":"内容提供器-content-providers","link":"#内容提供器-content-providers","children":[]},{"level":2,"title":"AndroidManifest.xml","slug":"androidmanifest-xml","link":"#androidmanifest-xml","children":[]},{"level":2,"title":"MainActivity.java","slug":"mainactivity-java","link":"#mainactivity-java","children":[]},{"level":2,"title":"activity_main.xml","slug":"activity-main-xml","link":"#activity-main-xml","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"外层build.gradle","slug":"外层build-gradle","link":"#外层build-gradle","children":[]},{"level":2,"title":"内层build.gradle","slug":"内层build-gradle","link":"#内层build-gradle","children":[]}],"readingTime":{"minutes":9.57,"words":2871},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"posts/android/Android笔记（一） 初识.md","categoryList":[{"id":"18958e","sort":10000,"name":"posts"},{"id":"ce0f17","sort":10014,"name":"android"}]}');export{k as comp,g as data};
