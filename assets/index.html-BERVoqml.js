import{_ as t,c as i,f as e,a as l,b as n,d as p,e as o,r as d,o as r}from"./app-D22ydJtp.js";const c={};function u(v,s){const a=d("RouteLink");return r(),i("div",null,[s[2]||(s[2]=e(`<p>我们知道，Servlet 中可以对客户端发来的信息进行处理（doGet、doPost等），可是，在 Servlet 里面输出 HTML 代码是一件很酸爽的事情。</p><p>如果我们直接写 HTML 代码，然后在需要动态获取的地方用 Java 代码来实现，不是很方便？</p><p>JSP 就是干这个事的！</p><p>维基百科定义: JSP（全称JavaServer Pages）是由Sun Microsystems公司主导建立的一种动态网页技术标准。 JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。</p><hr><h1 id="jsp-如何转成-html" tabindex="-1"><a class="header-anchor" href="#jsp-如何转成-html"><span>JSP 如何转成 HTML</span></a></h1><ol><li>把 hello.jsp 转译为hello_jsp.java</li><li>hello_jsp.java继承了<code>HttpServlet</code>类，因此它是一个servlet</li><li>hello_jsp.java 被编译为hello_jsp.class</li><li>执行 hello_jsp，生成 html</li><li>通过 http 协议把html 响应返回给浏览器</li></ol><hr><h1 id="jsp-的页面元素" tabindex="-1"><a class="header-anchor" href="#jsp-的页面元素"><span>JSP 的页面元素</span></a></h1><h2 id="静态内容" tabindex="-1"><a class="header-anchor" href="#静态内容"><span>静态内容</span></a></h2><p>包括 HTML、CSS、JavaScript 等内容</p><h2 id="指令" tabindex="-1"><a class="header-anchor" href="#指令"><span>指令</span></a></h2><p>类似于下面 以 <code>&lt;%@</code> 开头，以<code> %&gt;</code> 结尾的</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="scriptlet" tabindex="-1"><a class="header-anchor" href="#scriptlet"><span>Scriptlet</span></a></h2><p>类似于下面 以 <code>&lt;%</code> 开头，以<code> %&gt;</code> 结尾的</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%</span></span>
<span class="line"><span>    response.sendRedirect(&quot;hello.jsp&quot;);</span></span>
<span class="line"><span>%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是<code>&lt;%=</code>，后面加了个 <code>=</code> ，比如<code>&lt;%=&quot;hello jsp&quot;%&gt; </code> ，其实相当于 <code>&lt;%out.println(&quot;hello jsp&quot;);%&gt;</code>，这是一种隐式对象。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%=new Date().toString()%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="动作" tabindex="-1"><a class="header-anchor" href="#动作"><span>动作</span></a></h2><p>在jsp页面中包含另一个页面</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;jsp:include page=&quot;Filename&quot; &gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>跳转到另一个页面（服务端跳转）</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;jsp:forward page=&quot;hello.jsp&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="会话跟踪" tabindex="-1"><a class="header-anchor" href="#会话跟踪"><span>会话跟踪</span></a></h1><p>会话跟踪是一种灵活、轻便的机制，它使Web上的状态编程变为可能。</p><p>HTTP是一种无状态协议，每当用户发出请求时，服务器就会做出响应，客户端与服务器之间的联系是离散的、非连续的。当用户在同一网站的多个页面之间转换时，根本无法确定是否是同一个客户，会话跟踪技术就可以解决这个问题。当一个客户在多个页面间切换时，服务器会保存该用户的信息。</p><p>有四种方法可以实现会话跟踪技术：URL重写、隐藏表单域、Cookie、Session。</p><ol><li><strong>隐藏表单域</strong>：<code>&lt;input type=&quot;hidden&quot;&gt;</code>，非常适合步需要大量数据存储的会话应用。</li><li><strong>URL 重写</strong>：URL 可以在后面附加参数，和服务器的请求一起发送，这些参数为名字/值对。</li><li><strong>Cookie</strong>:一个 Cookie 是一个小的，已命名数据元素。服务器使用 SET-Cookie 头标将它作为 HTTP 响应的一部分传送到客户端，客户端被请求保存 Cookie 值，在对同一服务器的后续请求使用一个 Cookie 头标将之返回到服务器。与其它技术比较，Cookie 的一个优点是在浏览器会话结束后，甚至在客户端计算机重启后它仍可以保留其值。</li><li><strong>Session</strong>：使用 <code>setAttribute(String str,Object obj)</code> 方法将对象捆绑到一个会话</li></ol><hr><h1 id="cookie-和-session" tabindex="-1"><a class="header-anchor" href="#cookie-和-session"><span>Cookie 和 Session</span></a></h1>`,32)),l("p",null,[s[1]||(s[1]=n("关于 Cookie 和 Session 的概念，可参考 ")),p(a,{to:"/networking/7ic54ih1/"},{default:o(()=>s[0]||(s[0]=[n("HTTP之旅")])),_:1})]),s[3]||(s[3]=e(`<h2 id="setcookie" tabindex="-1"><a class="header-anchor" href="#setcookie"><span>setCookie</span></a></h2><p>我们可以在web目录下创建一个文件 setCookie.jsp，然后用 Scriptlet<code>&lt;%...%&gt;</code> new一个 Cookie 对象。</p><ul><li>用<code>c.setMaxAge()</code>来设置保留时间（以秒为单位）。</li><li>用<code>c.setPath(&quot;127.0.0.1&quot;)</code>来设置主机名</li><li>用<code>response.addCookie(c);</code>把这个cookie保存在浏览器端</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; import=&quot;javax.servlet.http.Cookie&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    Cookie c = new Cookie(&quot;name&quot;, &quot;Gareen&quot;);</span></span>
<span class="line"><span>    c.setMaxAge(60 * 24 * 60);</span></span>
<span class="line"><span>    c.setPath(&quot;127.0.0.1&quot;);</span></span>
<span class="line"><span>    response.addCookie(c);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;a href=&quot;getCookie.jsp&quot;&gt;跳转到获取cookie的页面&lt;/a&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问：http://127.0.0.1/setCookie.jsp ，用Chrome F12工具可看到 cookie</p><h2 id="getcookie" tabindex="-1"><a class="header-anchor" href="#getcookie"><span>getCookie</span></a></h2><p>在web目录下创建文件getCookie.jsp，填入</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%</span></span>
<span class="line"><span>    Cookie[] cookies = request.getCookies();</span></span>
<span class="line"><span>    if (null != cookies)</span></span>
<span class="line"><span>        for (int d = 0; d &lt;= cookies.length - 1; d++) {</span></span>
<span class="line"><span>            out.print(cookies[d].getName() + &quot;:&quot; + cookies[d].getValue() + &quot;&lt;br&gt;&quot;);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后访问 http://127.0.0.1/getCookie.jsp ，可以看到name:Gareen，这就是setCookie.jsp中设置的Cookie</p><h2 id="setsession" tabindex="-1"><a class="header-anchor" href="#setsession"><span>setSession</span></a></h2><p>会话指的是从用户打开浏览器访问一个网站开始，无论在这个网站中访问了多少页面，点击了多少链接，都属于同一个会话。 直到该用户关闭浏览器为止，都属于同一个会话。</p><p>setSession.jsp</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; import=&quot;javax.servlet.http.Cookie&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>   session.setAttribute(&quot;name&quot;, &quot;teemo&quot;);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;a href=&quot;getSession.jsp&quot;&gt;跳转到获取session的页面&lt;/a&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用 <code>session.setAttribute(&quot;name&quot;, &quot;wtf&quot;);</code> 来保存数据，其中第一个参数是键，第二个参数是值</li></ul><h2 id="getsession" tabindex="-1"><a class="header-anchor" href="#getsession"><span>getSession</span></a></h2><p>getSession.jsp</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; import=&quot;javax.servlet.http.Cookie&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    String name = (String)session.getAttribute(&quot;name&quot;);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>session中的name: &lt;%=name%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用<code>session.getAttribute(&quot;name&quot;);</code>获取数据，参数是键，不是值。</li></ul><p>效果是，在getSession.jsp页面显示如下内容</p><p>session中的name: wtf</p><hr><h1 id="如果浏览器关闭了-cookie" tabindex="-1"><a class="header-anchor" href="#如果浏览器关闭了-cookie"><span>如果浏览器关闭了 Cookie</span></a></h1><p>如果浏览器把cookie功能关闭，那么服务端就无法获取jsessionid,每一次访问，都会生成一个新的session对象。</p><p>为了解决这个问题，可以使用</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>response.encodeURL(&quot;getSession.jsp&quot;))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>于是 getSession.jsp 这个页面的URL就会被转换成</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>getSession.jsp;jsessionid=22424AEA86ADBE89F335EEB649D997A8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过这个方式，提交jsessionid到服务器。 服务器根据这个jsessionid匹配到对应的session. 与session相关的功能，就可以正常工作了。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; import=&quot;javax.servlet.http.Cookie&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>   session.setAttribute(&quot;name&quot;, &quot;teemo&quot;);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;a href=&quot;&lt;%=response.encodeURL(&quot;getSession.jsp&quot;)%&gt;&quot;&gt;跳转到获取session的页面&lt;/a&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域"><span>作用域</span></a></h1><p>JSP 有 4 个作用域</p><ul><li><strong>pageContext</strong>： 只能在当前页面访问，在其他页面就不能访问了。</li><li><strong>requestContext</strong>： 一次请求。随着本次请求结束，其中的数据也就被回收。</li><li><strong>sessionContext</strong>： 当前会话。从一个用户打开你的网站的那一刻起，无论访问了多少个子网页，链接都属于同一个会话，直到浏览器关闭。</li><li><strong>applicationContext</strong>： 全局，所有用户共享</li></ul><p>作用域示例</p><p>setContext.jsp</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    pageContext.setAttribute(&quot;name&quot;,&quot;gareen&quot;);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%=pageContext.getAttribute(&quot;name&quot;)%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getContext.jsp</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%=pageContext.getAttribute(&quot;name&quot;)%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getContext.jsp从setContext.jsp获取了数据，由于是<code>pageContext</code>，所以只能在当前页面，跳转到其他页面就不能获取了。</p><hr><h1 id="隐式对象" tabindex="-1"><a class="header-anchor" href="#隐式对象"><span>隐式对象</span></a></h1><p>JSP的隐式对象指的是不需要显示定义，直接就可以使用的对象。</p><p>JSP一共有9个隐式对象，分别是</p><ul><li><strong>request</strong>：请求</li><li><strong>response</strong>：响应</li><li><strong>out</strong>：输出</li><li><strong>pageContext</strong>：当前页面作用域</li><li><strong>session</strong>：会话作用域</li><li><strong>application</strong>：全局作用域</li><li><strong>page</strong>：表示当前对象。JSP 会被编译为一个Servlet类 ，运行的时候是一个Servlet实例。 page即代表this</li><li><strong>config</strong>：config可以获取一些在web.xml中初始化的参数。</li><li><strong>exception</strong>：异常。只有当前页面的&lt;%@page 指令设置为isErrorPage=&quot;true&quot;的时候才可以使用。</li></ul><p>参考：<a href="http://how2j.cn/k/jsp/jsp-object/580.html#nowhere" target="_blank" rel="noopener noreferrer">HOW2J</a></p><hr><h1 id="jstl" tabindex="-1"><a class="header-anchor" href="#jstl"><span>JSTL</span></a></h1><p>JSP Standard Tag Library 标准标签库</p><p>JSTL允许开人员可以像使用HTML标签 那样在JSP中开发Java功能。</p><p>JSTL库用得比较多的有 core 和 fmt</p><hr><h1 id="el表达式" tabindex="-1"><a class="header-anchor" href="#el表达式"><span>EL表达式</span></a></h1><p>首先在 jsp 头标注isELIgnored=&quot;false&quot;，因为不同版本的 Tomcat 对 EL 表达式默认开关不一样。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; isELIgnored=&quot;false&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;c:set var=&quot;name&quot; value=&quot;\${&#39;gareen&#39;}&quot; scope=&quot;request&quot; /&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>通过标签获取name: &lt;c:out value=&quot;\${name}&quot; /&gt; &lt;br&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>通过 EL 获取name: \${name}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可见，JSTL输出要写成<code>&lt;c:out value=&quot;\${name}&quot; /&gt; </code>的代码，用 EL表达式只需要写<code>\${name}</code>，非常方便。</p><h2 id="javabean" tabindex="-1"><a class="header-anchor" href="#javabean"><span>JavaBean</span></a></h2><p>Java语言欠缺属性、事件、多重继承功能。所以，如果要在Java程序中实现一些面向对象编程的常见需求，只能手写大量胶水代码。Java Bean正是编写这套胶水代码的惯用模式或约定。这些约定包括getXxx、setXxx、isXxx、addXxxListener、XxxEvent等。遵守上述约定的类可以用于若干工具或库。</p><blockquote><p>参考：<a href="https://www.zhihu.com/question/19773379/answer/31625054" target="_blank" rel="noopener noreferrer">Zhihu</a></p></blockquote><p>简单地说，JavaBean是一种标准：</p><ol><li>提供无参public的构造方法(默认提供)</li><li>每个属性，都有public的getter和setter</li><li>如果属性是boolean,那么就对应is和setter方法</li></ol><p>我们可以用 EL 表达式来获取 JavaBean 的属性</p><p>如<code>\${student.name}</code>，就会自动调用getName方法</p><p>完整例子来自 How2j</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; isELIgnored=&quot;false&quot; import=&quot;bean.*&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    Hero hero =new Hero();</span></span>
<span class="line"><span>    hero.setName(&quot;盖伦&quot;);</span></span>
<span class="line"><span>    hero.setHp(616);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    request.setAttribute(&quot;hero&quot;, hero);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>英雄名字 ： \${hero.name} &lt;br&gt;</span></span>
<span class="line"><span>英雄血量 ： \${hero.hp}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子2</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span></span>
<span class="line"><span>    pageEncoding=&quot;UTF-8&quot; import=&quot;java.util.*&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    List&lt;String&gt; heros = new ArrayList&lt;String&gt;();</span></span>
<span class="line"><span>    heros.add(&quot;塔姆&quot;);</span></span>
<span class="line"><span>    heros.add(&quot;艾克&quot;);</span></span>
<span class="line"><span>    heros.add(&quot;巴德&quot;);</span></span>
<span class="line"><span>    heros.add(&quot;雷克赛&quot;);</span></span>
<span class="line"><span>    heros.add(&quot;卡莉丝塔&quot;);</span></span>
<span class="line"><span>    request.setAttribute(&quot;heros&quot;,heros);</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;table width=&quot;200px&quot; align=&quot;center&quot; border=&quot;1&quot; cellspacing=&quot;0&quot;&gt;</span></span>
<span class="line"><span>&lt;tr&gt;</span></span>
<span class="line"><span>    &lt;td&gt;编号&lt;/td&gt;</span></span>
<span class="line"><span>    &lt;td&gt;英雄&lt;/td&gt;</span></span>
<span class="line"><span>&lt;/tr&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;c:forEach items=&quot;\${heros}&quot; var=&quot;hero&quot; varStatus=&quot;st&quot;  &gt;</span></span>
<span class="line"><span>    &lt;tr&gt;</span></span>
<span class="line"><span>        &lt;td&gt;\${st.count}&lt;/td&gt;</span></span>
<span class="line"><span>        &lt;td&gt;\${hero}&lt;/td&gt;</span></span>
<span class="line"><span>    &lt;/tr&gt;</span></span>
<span class="line"><span>&lt;/c:forEach&gt;</span></span>
<span class="line"><span>&lt;/table&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,66))])}const g=t(c,[["render",u],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/java/u5qm74qq/","title":"Java Web（二）JavaServer Pages （JSP）","lang":"zh-CN","frontmatter":{"title":"Java Web（二）JavaServer Pages （JSP）","comments":true,"categories":["Java Web","Web"],"tags":["Java","Web"],"abbrlink":"dfdfe2eb","createTime":"2018/03/22 17:52:26","permalink":"/java/u5qm74qq/","description":"我们知道，Servlet 中可以对客户端发来的信息进行处理（doGet、doPost等），可是，在 Servlet 里面输出 HTML 代码是一件很酸爽的事情。 如果我们直接写 HTML 代码，然后在需要动态获取的地方用 Java 代码来实现，不是很方便？ JSP 就是干这个事的！ 维基百科定义: JSP（全称JavaServer Pages）是由Su...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/java/u5qm74qq/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"Java Web（二）JavaServer Pages （JSP）"}],["meta",{"property":"og:description","content":"我们知道，Servlet 中可以对客户端发来的信息进行处理（doGet、doPost等），可是，在 Servlet 里面输出 HTML 代码是一件很酸爽的事情。 如果我们直接写 HTML 代码，然后在需要动态获取的地方用 Java 代码来实现，不是很方便？ JSP 就是干这个事的！ 维基百科定义: JSP（全称JavaServer Pages）是由Su..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Web"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java Web（二）JavaServer Pages （JSP）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"静态内容","slug":"静态内容","link":"#静态内容","children":[]},{"level":2,"title":"指令","slug":"指令","link":"#指令","children":[]},{"level":2,"title":"Scriptlet","slug":"scriptlet","link":"#scriptlet","children":[]},{"level":2,"title":"动作","slug":"动作","link":"#动作","children":[]},{"level":2,"title":"setCookie","slug":"setcookie","link":"#setcookie","children":[]},{"level":2,"title":"getCookie","slug":"getcookie","link":"#getcookie","children":[]},{"level":2,"title":"setSession","slug":"setsession","link":"#setsession","children":[]},{"level":2,"title":"getSession","slug":"getsession","link":"#getsession","children":[]},{"level":2,"title":"JavaBean","slug":"javabean","link":"#javabean","children":[]}],"readingTime":{"minutes":7.07,"words":2122},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/java/5.java web/Java Web（二）JavaServer Pages （JSP）.md"}');export{g as comp,h as data};
