import{_ as s,c as i,f as a,o as t}from"./app-D22ydJtp.js";const n={};function l(d,e){return t(),i("div",null,e[0]||(e[0]=[a(`<p>给自己的 git 备忘：</p><ol><li>git 使用流程</li><li>git 分支管理</li><li>git 撤销</li><li>连接到 github</li><li>fork</li><li>IDEA git 项目颜色含义</li><li>git stash 暂存</li></ol><hr><h1 id="git使用流程" tabindex="-1"><a class="header-anchor" href="#git使用流程"><span>git使用流程</span></a></h1><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h2><p>于一个目录下，初始化git</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>add</span></a></h2><p>新建/修改文件后，把修改内容 add 到 git 上面</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git add .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="三个-add-的区别" tabindex="-1"><a class="header-anchor" href="#三个-add-的区别"><span>三个 add 的区别</span></a></h3><ul><li><p><code>git add . </code> 监控工作区的状态树，将所有变化提交到暂存区，包括 modified 以及 new ，但不包括被删除的文件</p></li><li><p><code>git add -u </code> 仅监控已经被 add 的文件（即tracked file），不会提交新文件（untracked file）。（git add --update的缩写）</p></li><li><p><code>git add -A </code> 上面两个功能的合集（git add --all的缩写）</p></li></ul><h2 id="commit-提交到仓库" tabindex="-1"><a class="header-anchor" href="#commit-提交到仓库"><span>commit 提交到仓库</span></a></h2><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">modified</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="关联和同步" tabindex="-1"><a class="header-anchor" href="#关联和同步"><span>关联和同步</span></a></h1><h2 id="关联远程仓库" tabindex="-1"><a class="header-anchor" href="#关联远程仓库"><span>关联远程仓库</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git remote add origin git@github.com:JerrySheh/repository_name.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="推送到远程" tabindex="-1"><a class="header-anchor" href="#推送到远程"><span>推送到远程</span></a></h2><p>第一次推送，加 -u 参数</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git push origin branch_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="同步" tabindex="-1"><a class="header-anchor" href="#同步"><span>同步</span></a></h2><p>如果远程已经有文件，需要先 pull</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git pull origin master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="从远程仓库克隆" tabindex="-1"><a class="header-anchor" href="#从远程仓库克隆"><span>从远程仓库克隆</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone git@github.com:jerrysheh/helloworld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="diff" tabindex="-1"><a class="header-anchor" href="#diff"><span>diff</span></a></h2><p><code>git diff filepath</code> 工作区与暂存区比较</p><p><code>git diff HEAD filepath</code> 工作区与HEAD ( 当前工作分支) 比较</p><p><code>git diff --staged</code> 或 <code>--cached filepath</code> 暂存区与HEAD比较</p><p><code>git diff branchName filepath</code> 当前分支的文件与branchName 分支的文件进行比较</p><p><code>git diff commitId filepath</code> 与某一次提交进行比较</p><hr><h1 id="git-分支管理" tabindex="-1"><a class="header-anchor" href="#git-分支管理"><span>git 分支管理</span></a></h1><p>新建并切换到分支</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git checkout -b branch_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>把新建的本地分支 push 到远程</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git push origin branch_name:branch_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>删除远程分支</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git push origin -d branch_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="git-撤销" tabindex="-1"><a class="header-anchor" href="#git-撤销"><span>git 撤销</span></a></h1><p>查看更改日志，找到你想返回去的commit_id （一般第一条是你搞错了的，第二条就是上次你想返回去的id）</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>撤销提交和修改过的代码</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git reset --hard commit_id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>只撤销提交，不撤销修改过的代码（可以直接通过 <code>git commit</code> 重新提交对本地代码的修改）</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git reset commit_id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果想撤销的commit已经提交到远程仓库了，在本地 reset 修改后，重新强制提交。这样上次的错误提交就消失了。但是这样做有个弊端，就是如果你的错误commit（如commit3）之后还有其他人再提交了(commit4)， commit4也会消失。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git push --force</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="在新电脑配置git-并连接到githiub" tabindex="-1"><a class="header-anchor" href="#在新电脑配置git-并连接到githiub"><span>在新电脑配置git，并连接到githiub</span></a></h1><p>设置 git 的username 和 usermail</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git config --global user.name &quot;yourname&quot;</span></span>
<span class="line"><span>git config --global user.email &quot;youremail&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>生成SSH密钥</p><p>查看是否已经有了ssh密钥：<code>cd ~/.ssh</code> 如果没有密钥则不会有此文件夹，有则备份删除 生成密钥：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>ssh-keygen -t rsa -C “haiyan.xu.vip@gmail.com”</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按3个回车，密码为空。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>Your identification has been saved in /home/tekkub/.ssh/id_rsa.</span></span>
<span class="line"><span>Your public key has been saved in /home/tekkub/.ssh/id_rsa.pub.</span></span>
<span class="line"><span>The key fingerprint is:</span></span>
<span class="line"><span>………………</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后得到了两个文件：id_rsa和id_rsa.pub</p><p>在 .ssh 文件夹中执行 <code>ssh-add id_rsa</code>，再输入正确密码</p><p>在github上添加ssh密钥，这要添加的是“id_rsa.pub”里面的公钥。</p><p>打开 https://github.com/ ,在设置中添加密钥</p><p>测试：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$: ssh git@github.com</span></span>
<span class="line"><span>The authenticity of host ‘github.com (207.97.227.239)’ can’t be established.</span></span>
<span class="line"><span>RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span>
<span class="line"><span>Are you sure you want to continue connecting (yes/no)? yes</span></span>
<span class="line"><span>Warning: Permanently added ‘github.com,207.97.227.239′ (RSA) to the list of known hosts.</span></span>
<span class="line"><span>ERROR: Hi Jerrysheh! You’ve successfully authenticated, but GitHub does not provide shell access</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试成功就可以push code和 git clone 之类的操作了。</p><hr><h1 id="fork" tabindex="-1"><a class="header-anchor" href="#fork"><span>fork</span></a></h1><p>一般如果要参与开源项目，都是先 fork 别人的项目到自己的github，然后通过 <code>git clone</code> 自己的仓库克隆到本地进行修改。修改完毕后，通过<code>pull request</code>向原作者提交合并申请。</p><p>但是我们 fork 了别人的项目之后， 原作者 commit 了新内容， 我们 fork 的项目并不会更新。解决办法为：在本地建立两个库的中介，把两个远程库都clone到本地，然后拉取原项目更新到本地，合并更新，最后push到你的github。</p><p>流程如下：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://我们fork的地址.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>cd 进入该目录，<code>git remote -v</code>，可以看到只有两条我们自己的。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git remote add nsd https://原作者的地址.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>再次<code>git remote -v</code>，可以看到多出来两条。</p><blockquote><p>nsd 只是一个别名，可以任意取</p></blockquote><p>把原作者的更新 fetch 到本地</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git fetch nsd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看分支</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git branch -av</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以看到，出现一条 <code>remotes/nsd/master xxxxx</code> 的更新</p><p>合并</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git checkout master</span></span>
<span class="line"><span>git merge nsd/master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有冲突，需要丢掉本地分支</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git reset –hard hunter/master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这时你的当前本地的项目变成和原作者的主项目一样了，可以把它提交到你的GitHub库</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ git commit -am ‘更新到原作者的主分支’</span></span>
<span class="line"><span>$ git push origin</span></span>
<span class="line"><span>$ git push -u origin master -f –强制提交</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考：https://www.jianshu.com/p/633ae5c491f5</li></ul><hr><h1 id="lf-crlf" tabindex="-1"><a class="header-anchor" href="#lf-crlf"><span>LF/CRLF</span></a></h1><p>LF will be replaced by CRLF</p><p>禁用自动转换即可</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git config –global core.autocrlf false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h1><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 设置sock5代理</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http.proxy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">socks5://127.0.0.1:1080</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https.proxy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">socks5://127.0.0.1:1080</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 设置http代理</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https.proxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://127.0.0.1:1080</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https.proxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://127.0.0.1:1080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 取消代理</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --unset</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --unset</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https.proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="idea-git项目颜色含义" tabindex="-1"><a class="header-anchor" href="#idea-git项目颜色含义"><span>IDEA git项目颜色含义</span></a></h1><ul><li>绿色： 创建了仓库没有的新文件，还未提交</li><li>蓝色： 仓库已有的文件，被修改了，还未提交</li><li>红色： 没有添加到版本控制的文件（包括 ignore 的）</li></ul><p>参考：</p><ul><li><a href="https://www.jb51.net/article/135583.htm" target="_blank" rel="noopener noreferrer">IntelliJ IDEA 中git的使用图文教程</a></li></ul><hr><h1 id="git-stash-暂存" tabindex="-1"><a class="header-anchor" href="#git-stash-暂存"><span>git stash 暂存</span></a></h1><p>有时候我们在本地写了一些代码，之后可能紧急要切换到另一个分支做一些修复，可以先将本地变更的代码“暂存”，稍后再在任意分支恢复。</p><p>暂存代码</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git stash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>切换到别的分支工作</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git checkout master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>工作完换回来</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git switch dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看暂存区</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git stash list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>暂存内容恢复</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git stash pop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,115)]))}const r=s(n,[["render",l],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/git/","title":"给自己的 git 备忘","lang":"zh-CN","frontmatter":{"title":"给自己的 git 备忘","categories":["技能","git"],"tags":["git"],"abbrlink":"9f9a74a3","createTime":"2017/09/04 15:43:46","permalink":"/git/","description":"给自己的 git 备忘： git 使用流程 git 分支管理 git 撤销 连接到 github fork IDEA git 项目颜色含义 git stash 暂存 git使用流程 初始化 于一个目录下，初始化git add 新建/修改文件后，把修改内容 add 到 git 上面 三个 add 的区别 git add . 监控工作区的状态树，将所有变化...","head":[["meta",{"property":"og:url","content":"https://jerrysheh.com/git/"}],["meta",{"property":"og:site_name","content":"Jerry"}],["meta",{"property":"og:title","content":"给自己的 git 备忘"}],["meta",{"property":"og:description","content":"给自己的 git 备忘： git 使用流程 git 分支管理 git 撤销 连接到 github fork IDEA git 项目颜色含义 git stash 暂存 git使用流程 初始化 于一个目录下，初始化git add 新建/修改文件后，把修改内容 add 到 git 上面 三个 add 的区别 git add . 监控工作区的状态树，将所有变化..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-20T05:02:32.000Z"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2024-10-20T05:02:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"给自己的 git 备忘\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-20T05:02:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":2,"title":"add","slug":"add","link":"#add","children":[{"level":3,"title":"三个 add 的区别","slug":"三个-add-的区别","link":"#三个-add-的区别","children":[]}]},{"level":2,"title":"commit 提交到仓库","slug":"commit-提交到仓库","link":"#commit-提交到仓库","children":[]},{"level":2,"title":"关联远程仓库","slug":"关联远程仓库","link":"#关联远程仓库","children":[]},{"level":2,"title":"推送到远程","slug":"推送到远程","link":"#推送到远程","children":[]},{"level":2,"title":"同步","slug":"同步","link":"#同步","children":[]},{"level":2,"title":"从远程仓库克隆","slug":"从远程仓库克隆","link":"#从远程仓库克隆","children":[]},{"level":2,"title":"diff","slug":"diff","link":"#diff","children":[]}],"readingTime":{"minutes":4.8,"words":1441},"git":{"createdTime":1729400552000,"updatedTime":1729400552000,"contributors":[{"name":"jerrysheh","email":"jerrysheh@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/git/给自己的git备忘.md"}');export{r as comp,c as data};
